let confluence z = if true then z else 5
//│ confluence: 'a -> (int | 'a)

let mkpair x y = (x, confluence y)
//│ mkpair: 'a -> 'b -> ('a, int | 'b,)

:e
mkpair 1 "2"
//│ /!!!\ Uncaught error: scala.NotImplementedError: an implementation is missing
//│ 	at: scala.Predef$.$qmark$qmark$qmark(Predef.scala:344)
//│ 	at: mlscript.UnificationSolver.makeMessagesUR$1(UnificationSolver.scala:252)
//│ 	at: mlscript.UnificationSolver.createErrorMessage(UnificationSolver.scala:283)
//│ 	at: mlscript.UnificationSolver.createErrorMessage$(UnificationSolver.scala:187)
//│ 	at: mlscript.TypeDefs.createErrorMessage(TypeDefs.scala:11)
//│ 	at: mlscript.UnificationSolver$$anonfun$1.applyOrElse(UnificationSolver.scala:177)
//│ 	at: mlscript.UnificationSolver$$anonfun$1.applyOrElse(UnificationSolver.scala:176)
//│ 	at: scala.collection.Iterator$$anon$7.hasNext(Iterator.scala:525)
//│ 	at: scala.collection.immutable.List.prependedAll(List.scala:152)
//│ 	at: scala.collection.IterableOnceOps.toList(IterableOnce.scala:1288)

:e
let conflict x = mkpair (not x) x
//│ conflict: (bool & 'a) -> (bool, int | 'a,)

let g x = (not x, (if true then x else 5))
//│ g: (bool & 'a) -> (bool, int | 'a,)

let g x = (not x, (if true then x else 5))
//│ g: (bool & 'a) -> (bool, int | 'a,)
