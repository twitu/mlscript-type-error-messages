
0, fun x -> x
//│ res: (int, 'a -> 'a,)

let g x = x, if true then x else x
//│ g: 'a -> ('a, 'a,)

[0, 1]
//│ res: list[(int, int,)]

[0; 1]
//│ res: list[int]

[0, 1; 2, 3]
//│ res: list[(int, int,)]


:e
[0, 1; 2, 3, 4]
//│ /!!!\ Uncaught error: scala.NotImplementedError: an implementation is missing
//│ 	at: scala.Predef$.$qmark$qmark$qmark(Predef.scala:344)
//│ 	at: mlscript.UnificationSolver.makeMessagesUR$1(UnificationSolver.scala:252)
//│ 	at: mlscript.UnificationSolver.createErrorMessage(UnificationSolver.scala:283)
//│ 	at: mlscript.UnificationSolver.createErrorMessage$(UnificationSolver.scala:187)
//│ 	at: mlscript.TypeDefs.createErrorMessage(TypeDefs.scala:11)
//│ 	at: mlscript.UnificationSolver$$anonfun$1.applyOrElse(UnificationSolver.scala:177)
//│ 	at: mlscript.UnificationSolver$$anonfun$1.applyOrElse(UnificationSolver.scala:176)
//│ 	at: scala.collection.Iterator$$anon$7.hasNext(Iterator.scala:525)
//│ 	at: scala.collection.immutable.List.prependedAll(List.scala:152)
//│ 	at: scala.collection.IterableOnceOps.toList(IterableOnce.scala:1288)

